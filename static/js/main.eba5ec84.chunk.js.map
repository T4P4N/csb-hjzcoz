{"version":3,"sources":["PriceChart.js","rangeSlider.js","Prompt.js","App.js","index.js"],"names":["Chart","data","buybtn","sellbtn","handleClick","buyItem","className","items","map","i","index","onClick","e","name","replace","c","toUpperCase","price","qty","RangeSlider","min","max","item_name","showSlider","hideSlider","inputRef","handleValue","handleAction","type","value","ref","id","onChange","ConfirmBox","setAction","showPrompt","App","w_price","Math","floor","random","p_price","c_price","h_price","a_price","l_price","React","useState","cash","priceChart","setPriceChart","location","currentArea","setCurrentArea","days","setDays","message","setMessage","changeLocation","area","filter","p","setPrices","qty_max","setQtyMax","show_slider","setShowSlider","setShowPrompt","setItemName","item","quantity","total","max_qty","setqty","sellItem","hide_slider","action","useRef","length","current","parseInt","new_item","new_cash","buyN","sellN","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.eba5ec84.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst Chart = ({ data, buybtn, sellbtn, buyItem, handleClick }) => {\r\n  return (\r\n    <>\r\n      <div className=\"price-chart\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"item-name\">Name</th>\r\n              <th>Price($)</th>\r\n              <th>Sell</th>\r\n              <th>Qty</th>\r\n              <th>Buy</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.items.map((i, index) => (\r\n              <tr className=\"item\" key={index}>\r\n                <td\r\n                  className=\"item-name\"\r\n                  onClick={(e) => handleClick(i.name, e)}\r\n                >\r\n                  {i.name.replace(/^\\w/, (c) => c.toUpperCase())}\r\n                </td>\r\n                <td\r\n                  className=\"item-price\"\r\n                  onClick={(e) => handleClick(i.name, e)}\r\n                >\r\n                  {i.price}\r\n                </td>\r\n                <td className=\"sell-btn\" onClick={(e) => sellbtn(i.name, e)}>\r\n                  {\" \"}\r\n                  -{\" \"}\r\n                </td>\r\n                <td className=\"item-price\">{i.qty}</td>\r\n                <td className=\"buy-btn\" onClick={(e) => buybtn(i.name, e)}>\r\n                  {\" \"}\r\n                  +{\" \"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst RangeSlider = ({\r\n  min,\r\n  max,\r\n  name,\r\n  item_name,\r\n  showSlider,\r\n  hideSlider,\r\n  inputRef,\r\n  qty,\r\n  handleValue,\r\n  handleAction\r\n}) => {\r\n  return (\r\n    <div className={showSlider ? \"slidecontainer\" : \"slidecontainer-hidden\"}>\r\n      <div className=\"slide-wrap\">\r\n        <p className=\"prompt-name\">\r\n          {item_name.replace(/^\\w/, (c) => c.toUpperCase())} ({qty})\r\n        </p>\r\n        <br />\r\n        <input\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={qty}\r\n          className=\"slider\"\r\n          ref={inputRef}\r\n          id=\"myRange\"\r\n          onChange={(e, name) => {\r\n            handleValue(e, name);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"btn-container\">\r\n        <button onClick={hideSlider}>Cancel</button>\r\n        <button\r\n          onClick={(e) => {\r\n            handleAction(item_name, qty, name);\r\n          }}\r\n        >\r\n          {name}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst ConfirmBox = ({ setAction, showPrompt, item_name }) => {\r\n  return (\r\n    <div className={showPrompt ? \"confirm-box\" : \"confirm-box-hidden\"}>\r\n      <p>{item_name.replace(/^\\w/, (c) => c.toUpperCase())}</p>\r\n      <div className=\"btns\">\r\n        <button onClick={() => setAction(\"cancel\")}>Cancel</button>\r\n        <button onClick={() => setAction(\"buy\", item_name)}>Buy</button>\r\n        <button onClick={() => setAction(\"sell\", item_name)}>Sell</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmBox;\r\n","import \"./styles.css\";\nimport React from \"react\";\nimport Chart from \"./PriceChart\";\nimport RangeSlider from \"./rangeSlider\";\nimport ConfirmBox from \"./Prompt\";\nexport default function App() {\n  let w_price = Math.floor(Math.random() * (850 - 25 + 1)) + 25;\n  let p_price = Math.floor(Math.random() * (3050 - 880 + 1)) + 880;\n  let c_price = Math.floor(Math.random() * (80000 - 30000 + 1)) + 30000;\n  let h_price = Math.floor(Math.random() * (40000 - 5000 + 1)) + 5000;\n  let a_price = Math.floor(Math.random() * (4500 - 900 + 1)) + 900;\n  let l_price = Math.floor(Math.random() * (70 - 4 + 1)) + 4;\n  const [priceChart, setPriceChart] = React.useState({\n    cash: 2000,\n    items: [\n      { name: \"weed\", price: w_price, qty: 0 },\n      { name: \"cocaine\", price: c_price, qty: 0 },\n      { name: \"heroine\", price: h_price, qty: 0 },\n      { name: \"acid\", price: a_price, qty: 0 },\n      { name: \"ludes\", price: l_price, qty: 0 },\n      { name: \"pcp\", price: p_price, qty: 0 }\n    ]\n  });\n  const [location, setLocation] = React.useState([\n    \"bankner\",\n    \"narela\",\n    \"bawana\",\n    \"alipur\",\n    \"azadpur\"\n  ]);\n  const [currentArea, setCurrentArea] = React.useState(\"bankner\");\n  const [days, setDays] = React.useState(10);\n\n  const [message, setMessage] = React.useState(\"\");\n\n  // hide alert\n  function hideAlert() {\n    setMessage(\"\");\n  }\n\n  // Reset Function\n  function reset_to_default() {\n    setPriceChart({\n      cash: 2000,\n      items: [\n        { name: \"weed\", price: w_price, qty: 0 },\n        { name: \"cocaine\", price: c_price, qty: 0 },\n        { name: \"heroine\", price: h_price, qty: 0 },\n        { name: \"acid\", price: a_price, qty: 0 },\n        { name: \"ludes\", price: l_price, qty: 0 },\n        { name: \"pcp\", price: p_price, qty: 0 }\n      ]\n    });\n    setDays(10);\n    setCurrentArea(\"bankner\");\n  }\n  //\n\n  function setPrices() {\n    // setting prices\n    let w_price = Math.floor(Math.random() * (850 - 25 + 1)) + 25;\n    let p_price = Math.floor(Math.random() * (3050 - 880 + 1)) + 880;\n    let c_price = Math.floor(Math.random() * (80000 - 30000 + 1)) + 30000;\n    let h_price = Math.floor(Math.random() * (40000 - 5000 + 1)) + 5000;\n    let a_price = Math.floor(Math.random() * (4500 - 900 + 1)) + 900;\n    let l_price = Math.floor(Math.random() * (70 - 4 + 1)) + 4;\n    priceChart.items.filter((p) => p.name === \"weed\")[0].price = w_price;\n    priceChart.items.filter((p) => p.name === \"cocaine\")[0].price = c_price;\n    priceChart.items.filter((p) => p.name === \"heroine\")[0].price = h_price;\n    priceChart.items.filter((p) => p.name === \"acid\")[0].price = a_price;\n    priceChart.items.filter((p) => p.name === \"ludes\")[0].price = l_price;\n    priceChart.items.filter((p) => p.name === \"pcp\")[0].price = p_price;\n  }\n\n  function changeLocation(area) {\n    if (currentArea === area) {\n      setMessage(\n        `You are already in ${area.replace(/^\\w/, (c) => c.toUpperCase())}`\n      );\n      return false;\n    }\n    const items = priceChart.items;\n    const cash = priceChart.cash;\n    setPrices();\n    setDays(days - 1);\n    if (days <= 0) {\n      setMessage(`Game Over, Your Score is ${cash}`);\n      reset_to_default();\n      return 0;\n    }\n    setPriceChart({\n      cash: cash,\n      items: [...items]\n    });\n    setCurrentArea(area);\n  }\n\n  // get max qty you can buy with limited cash\n  function max_qty(price, cash) {\n    let quantity = 0;\n    let total = 0;\n    for (let i = 0; i < cash; i++) {\n      if (cash > total) {\n        quantity++;\n        total = price * quantity;\n      }\n      if (total === cash) {\n        return quantity;\n      }\n      if (total > cash) {\n        return quantity - 1;\n      }\n    }\n    return quantity;\n  }\n\n  // Buy item with n of qty\n  function buyN(item_name, qty) {\n    qty = parseInt(qty);\n    // console.log(item, qty, priceChart);\n    const item = priceChart.items.filter((p) => p.name === item_name)[0];\n    const items = priceChart.items;\n    const cash = priceChart.cash;\n    const new_item = item;\n    if (item.price > cash) {\n      setMessage(\"You dont have enough cash\");\n      return 0;\n    }\n    if (new_item) {\n      new_item.qty += qty;\n    }\n    const new_cash = cash - item.price * qty;\n    setPriceChart({\n      cash: new_cash,\n      items: [...items]\n    });\n\n    hide_slider();\n  }\n\n  // Sell items & make money\n  function sellN(item_name, qty) {\n    qty = parseInt(qty);\n    const item = priceChart.items.filter((p) => p.name === item_name)[0];\n    const items = priceChart.items;\n    const cash = priceChart.cash;\n\n    if (item.qty > 0) {\n      // Object.assign(priceChart.items, { : \"Pete\" });\n      item.qty -= qty;\n    } else {\n      setMessage(`You dont have any ${item_name} left`);\n      return 0;\n    }\n    const new_cash = cash + item.price * qty;\n    setPriceChart({\n      cash: new_cash,\n      items: [...items]\n    });\n    hide_slider();\n  }\n\n  // Buy function for + btn\n  function buyOne(item_name) {\n    buyItem(item_name);\n  }\n\n  // Sell function for - btn\n  function sellOne(item_name) {\n    sellItem(item_name);\n  }\n\n  ////////////////////////////////////////////\n  // State for managing custom input slider\n  // & confirmation box.\n\n  // max quantity of items to be bought or sold\n  const [qty_max, setQtyMax] = React.useState(0);\n\n  // slider toggle state\n  const [show_slider, setShowSlider] = React.useState(false);\n\n  // confirmation box/ prompt toggle state\n  const [showPrompt, setShowPrompt] = React.useState(false);\n\n  // use less maybe\n  // const [quant, setQuant] = React.useState(1);\n  // anyways dont touch it\n\n  // for setting itemname for input slider & confirmation box\n  const [item_name, setItemName] = React.useState(\"\");\n\n  // Buy from slider\n  function buyItem(item_name) {\n    const item = priceChart.items.filter((p) => p.name === item_name)[0];\n    const cash = priceChart.cash;\n    const qty = max_qty(item.price, cash);\n    if (qty <= 0) {\n      setMessage(`You can't buy ${item_name}`);\n      return 0;\n    }\n    setItemName(item_name);\n    setAction(\"Buy\");\n    setQtyMax(qty);\n    setqty(qty);\n    setShowSlider(true);\n  }\n\n  // Sell from slider\n  function sellItem(item_name) {\n    const item = priceChart.items.filter((p) => p.name === item_name)[0];\n    const qty = item.qty;\n    if (qty <= 0) {\n      setMessage(`You can't sell ${item_name}`);\n      return 0;\n    }\n    setAction(\"Sell\");\n    setItemName(item_name);\n    setQtyMax(qty);\n    setqty(qty);\n    setShowSlider(true);\n  }\n\n  // hide slider function\n  function hide_slider() {\n    // setQuant(1);\n    setShowSlider(false);\n  }\n  // more states for handling input slider & confirmation box\n  const [qty, setqty] = React.useState(qty_max);\n  const [action, setAction] = React.useState(\"\");\n  const inputRef = React.useRef();\n\n  // function for handling value coming from input slider\n  function handleValue(e, name) {\n    setqty(inputRef.current.value);\n  }\n\n  // function for handling click event\n  // coming from pricechart\n  // //\n  function handleClick(item_name) {\n    const item = priceChart.items.filter((p) => p.name === item_name)[0];\n    const cash = priceChart.cash;\n    // if user can afford to buy then show buy slider\n    if (item.qty <= 0) {\n      buyItem(item_name);\n    }\n    //  if user can't afford to buy more then show sell slider\n    else if (item.qty > 0 && cash < item.price) {\n      sellItem(item_name);\n    }\n    // if user can buy & sell then show confirmation box\n    else if (item.qty > 0) {\n      setItemName(item_name);\n      setShowPrompt(true);\n    }\n  }\n\n  // function for handling Confirmation box\n  function handleSetAction(action, item_name) {\n    if (action === \"buy\") {\n      setShowPrompt(false);\n      buyItem(item_name);\n    } else if (action === \"sell\") {\n      setShowPrompt(false);\n      sellItem(item_name);\n    } else {\n      setShowPrompt(false);\n    }\n  }\n\n  // function for handling action coming from input slider\n  function handleAction(item_name, qty, action) {\n    if (action === \"buy\" || action === \"Buy\") {\n      buyN(item_name, qty);\n    } else if (action === \"sell\" || action === \"Sell\") {\n      sellN(item_name, qty);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"status-bar\">\n        In: {currentArea.replace(/^\\w/, (c) => c.toUpperCase())} | CASH: $\n        {priceChart.cash} | DAYS: {days}/10\n      </h1>\n      <div className=\"d_row\">\n        <h4>Where To?</h4>\n        <br />\n        {location.map((i, index) => (\n          <button\n            className={i === currentArea ? \"btn-disabled\" : \"location-btn\"}\n            key={index}\n            onClick={(e) => changeLocation(i, e)}\n          >\n            {i.replace(/^\\w/, (c) => c.toUpperCase())}\n          </button>\n        ))}\n      </div>\n      <div className={message.length > 1 ? \"alert\" : \"alert-hidden\"}>\n        <p className=\"msg\">{message}</p>\n        <span className=\"closebtn\" onClick={hideAlert}>\n          &times;\n        </span>\n      </div>\n      {/* TOODS: */}\n      {/* Bank & Loan Shark */}\n      {/* color coded price indicator */}\n      {/* Pocket sizes aka quanitity restriction */}\n      {/* RPG elements with health & guns & cops */}\n      {/* Mugger & robbery */}\n      {/* msgs for all time high price & low price */}\n      {/*  */}\n      <Chart\n        data={priceChart}\n        buybtn={buyOne}\n        sellbtn={sellOne}\n        buyItem={buyItem}\n        handleClick={handleClick}\n      />\n      <RangeSlider\n        min={1}\n        max={qty_max}\n        item_name={item_name}\n        name={action}\n        inputRef={inputRef}\n        qty={qty}\n        handleValue={handleValue}\n        showSlider={show_slider}\n        hideSlider={hide_slider}\n        handleAction={handleAction}\n      />\n      <ConfirmBox\n        setAction={handleSetAction}\n        showPrompt={showPrompt}\n        item_name={item_name}\n      />\n      {/* <button onClick={reset_to_default}>Reset</button> */}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}